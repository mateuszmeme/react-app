{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Button, Collapsible, Heading, Grommet } from 'grommet';\nimport { Notification } from 'grommet-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  global: {\n    colors: {\n      brand: '#228BE6'\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px'\n    }\n  }\n};\n\nconst AppBar = props => /*#__PURE__*/_jsxDEV(Box, {\n  tag: \"header\",\n  direction: \"row\",\n  align: \"center\",\n  justify: \"between\",\n  background: \"brand\",\n  pad: {\n    left: 'medium',\n    right: 'small',\n    vertical: 'small'\n  },\n  elevation: \"medium\",\n  style: {\n    zIndex: '1'\n  },\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 5\n}, this);\n\n_c = AppBar;\n\nfunction App() {\n  _s();\n\n  const [showSidebar, setShowSidebar] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Grommet, {\n    theme: theme,\n    full: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      fill: true,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        children: [\"Hello Grommet!\", /*#__PURE__*/_jsxDEV(Heading, {\n          level: \"3\",\n          margin: \"none\",\n          children: \"My App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 18\n          }, this),\n          onClick: () => setShowSidebar(!showSidebar)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        direction: \"row\",\n        flex: true,\n        overflow: {\n          horizontal: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flex: true,\n          align: \"center\",\n          justify: \"center\",\n          children: \"app body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), showSidebar && /*#__PURE__*/_jsxDEV(Collapsible, {\n          direction: \"horizontal\",\n          open: showSidebar,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            flex: true,\n            width: \"medium\",\n            background: \"light-2\",\n            elevation: \"small\",\n            align: \"center\",\n            justify: \"center\",\n            children: \"sidebar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Jn+Blp4AInVy8bzFY0VrkhtmHTg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppBar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["E:/react/my-app/src/App.js"],"names":["React","useState","Box","Button","Collapsible","Heading","Grommet","Notification","theme","global","colors","brand","font","family","size","height","AppBar","props","left","right","vertical","zIndex","App","showSidebar","setShowSidebar","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,WAAtB,EAAmCC,OAAnC,EAA4CC,OAA5C,QAA2D,SAA3D;AACA,SAASC,YAAT,QAA6B,eAA7B;;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AACDC,MAAAA,KAAK,EAAE;AADN,KADF;AAIJC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE,QADN;AAEFC,MAAAA,IAAI,EAAE,MAFJ;AAGFC,MAAAA,MAAM,EAAE;AAHN;AAJF;AADE,CAAd;;AAYA,MAAMC,MAAM,GAAIC,KAAD,iBACX,QAAC,GAAD;AACE,EAAA,GAAG,EAAC,QADN;AAEE,EAAA,SAAS,EAAC,KAFZ;AAGE,EAAA,KAAK,EAAC,QAHR;AAIE,EAAA,OAAO,EAAC,SAJV;AAKE,EAAA,UAAU,EAAC,OALb;AAME,EAAA,GAAG,EAAE;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE,OAAzB;AAAkCC,IAAAA,QAAQ,EAAE;AAA5C,GANP;AAOE,EAAA,SAAS,EAAC,QAPZ;AAQE,EAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GART;AAAA,KASMJ;AATN;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMD,M;;AAaN,SAASM,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;AACA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAEO,KAAhB;AAAuB,IAAA,IAAI,MAA3B;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,IAAI,MAAT;AAAA,8BACD,QAAC,MAAD;AAAA,kDAEA,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,GAAf;AAAmB,UAAA,MAAM,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,MAAD;AACM,UAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBADZ;AAEM,UAAA,OAAO,EAAE,MAAMgB,cAAc,CAAC,CAACD,WAAF;AAFnC;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,eASD,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,IAAI,MAAzB;AAA0B,QAAA,QAAQ,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAApC;AAAA,gCACA,QAAC,GAAD;AAAK,UAAA,IAAI,MAAT;AAAU,UAAA,KAAK,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAICF,WAAW,iBACV,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,YAAvB;AAAoC,UAAA,IAAI,EAAEA,WAA1C;AAAA,iCACI,QAAC,GAAD;AACA,YAAA,IAAI,MADJ;AAEE,YAAA,KAAK,EAAC,QAFR;AAGE,YAAA,UAAU,EAAC,SAHb;AAIE,YAAA,SAAS,EAAC,OAJZ;AAKE,YAAA,KAAK,EAAC,QALR;AAME,YAAA,OAAO,EAAC,QANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cATC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAnCQD,G;;MAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Button, Collapsible, Heading, Grommet } from 'grommet';\nimport { Notification } from 'grommet-icons';\nconst theme = {\n    global: {\n      colors: {\n             brand: '#228BE6',\n           },\n        font: {\n            family: 'Roboto',\n            size: '18px',\n            height: '20px',\n        },\n    },\n};\nconst AppBar = (props) => (\n    <Box\n      tag='header'\n      direction='row'\n      align='center'\n      justify='between'\n      background='brand'\n      pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n      elevation='medium'\n      style={{ zIndex: '1' }}\n      {...props}\n    />\n  );\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(false);\n  return (\n    <Grommet theme={theme} full>\n      <Box fill>\n     <AppBar>\n       Hello Grommet!\n     <Heading level='3' margin='none'>My App</Heading>\n     <Button\n           icon={<Notification />}\n           onClick={() => setShowSidebar(!showSidebar)}\n        />\n     </AppBar>\n     <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n     <Box flex align='center' justify='center'>\n       app body\n     </Box>\n     {showSidebar && (\n       <Collapsible direction=\"horizontal\" open={showSidebar}>\n           <Box\n           flex\n             width='medium'\n             background='light-2'\n             elevation='small'\n             align='center'\n             justify='center'\n           >\n             sidebar\n           </Box>\n           </Collapsible>\n           )}\n   </Box>\n </Box>\n      </Grommet>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}