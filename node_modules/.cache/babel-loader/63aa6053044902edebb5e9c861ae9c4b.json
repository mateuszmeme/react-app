{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Grid, Text } from 'grommet';\nimport { hpe } from 'grommet-theme-hpe';\nimport { FormClose, Notification } from 'grommet-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppBar = props => /*#__PURE__*/_jsxDEV(Box, {\n  tag: \"header\",\n  direction: \"row\",\n  align: \"center\",\n  justify: \"between\",\n  background: \"brand\",\n  pad: {\n    left: 'medium',\n    right: 'small',\n    vertical: 'small'\n  },\n  elevation: \"medium\",\n  style: {\n    zIndex: '1'\n  },\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = AppBar;\n\nfunction App() {\n  _s();\n\n  const [showSidebar, setShowSidebar] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Grommet, {\n    theme: hpe,\n    full: true,\n    children: [\"export const GridExample = () => (\", /*#__PURE__*/_jsxDEV(Grid, {\n      rows: ['xxsmall', 'flex', 'xxsmall'],\n      columns: ['xsmall', 'auto'],\n      areas: [['header', 'header'], ['sidebar', 'main'], ['footer', 'footer']],\n      fill: true,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        border: {\n          color: 'border',\n          style: 'dashed'\n        },\n        gridArea: \"header\",\n        justify: \"center\",\n        pad: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          weight: \"bold\",\n          children: \"Header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        border: {\n          color: 'border',\n          style: 'dashed'\n        },\n        gridArea: \"sidebar\",\n        pad: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          weight: \"bold\",\n          children: \"Sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        border: {\n          color: 'border',\n          style: 'dashed'\n        },\n        gridArea: \"main\",\n        pad: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          weight: \"bold\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        border: {\n          color: 'border',\n          style: 'dashed'\n        },\n        gridArea: \"footer\",\n        justify: \"center\",\n        pad: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          weight: \"bold\",\n          children: \"Footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Jn+Blp4AInVy8bzFY0VrkhtmHTg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppBar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["E:/react/my-app/src/App.js"],"names":["React","useState","Box","Grid","Text","hpe","FormClose","Notification","AppBar","props","left","right","vertical","zIndex","App","showSidebar","setShowSidebar","color","style"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Grid, Text } from 'grommet';\nimport { hpe } from 'grommet-theme-hpe';\nimport { FormClose, Notification } from 'grommet-icons';\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation='medium'\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(false);\n  return (\n    <Grommet theme={hpe} full>\n      export const GridExample = () => (\n  <Grid\n    rows={['xxsmall', 'flex', 'xxsmall']}\n    columns={['xsmall', 'auto']}\n    areas={[\n      ['header', 'header'],\n      ['sidebar', 'main'],\n      ['footer', 'footer'],\n    ]}\n    fill\n  >\n    <Box\n      border={{ color: 'border', style: 'dashed' }}\n      gridArea=\"header\"\n      justify=\"center\"\n      pad=\"small\"\n    >\n      <Text weight=\"bold\">Header</Text>\n    </Box>\n\n    <Box\n      border={{ color: 'border', style: 'dashed' }}\n      gridArea=\"sidebar\"\n      pad=\"small\"\n    >\n      <Text weight=\"bold\">Sidebar</Text>\n    </Box>\n\n    <Box\n      border={{ color: 'border', style: 'dashed' }}\n      gridArea=\"main\"\n      pad=\"small\"\n    >\n      <Text weight=\"bold\">Main</Text>\n    </Box>\n\n    <Box\n      border={{ color: 'border', style: 'dashed' }}\n      gridArea=\"footer\"\n      justify=\"center\"\n      pad=\"small\"\n    >\n      <Text weight=\"bold\">Footer</Text>\n    </Box>\n  </Grid>\n);\n    </Grommet>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}