{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps, padPropType } from '../../utils/prop-types';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nvar sizes = ['none', 'xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\nvar sides = ['horizontal', 'vertical', 'top', 'bottom', 'left', 'right', 'start', 'end'];\nvar padShapeSides = {};\nsides.forEach(function (side) {\n  padShapeSides[side] = PropTypes.oneOf(sizes);\n});\nvar borderTypes = [PropTypes.bool, PropTypes.oneOf(sides), PropTypes.shape({\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    dark: PropTypes.string,\n    light: PropTypes.string\n  })]),\n  side: PropTypes.oneOf(sides),\n  size: PropTypes.oneOfType([PropTypes.oneOf(sizes), PropTypes.string])\n})];\nexport var doc = function doc(List) {\n  var DocumentedList = describe(List).availableAt(getAvailableAtBadge('List', 'Visualizations')).description('An ordered list of items.').usage(\"import { List } from 'grommet';\\n<List data={[...]} />\").intrinsicElement('ol');\n  DocumentedList.propTypes = _extends({}, genericProps, {\n    action: PropTypes.func.description(\"Accepts a function that allows for a custom rendering\\n       of a component, it should be passed with an item and\\n        index of an array and return a react element\\n      'action = ({item, index}) => <Content />'\"),\n    as: PropTypes.string.description('The DOM tag or react component to use for the element.').defaultValue('ul'),\n    background: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).description(\"Item background. An array value indicates that items should have\\n      different backgrounds, modulo the array index.\"),\n    border: PropTypes.oneOfType(borderTypes).description(\"Item border.\"),\n    data: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})])).description('Array of data objects.'),\n    children: PropTypes.func.description(\"Function that will be called when each data item is rendered.\\n      It will be passed three arguments, the individual data item, its index,\\n      and an object indicating the state of the item, if any. It\\n      should return a react element.\\n      For example:\\n      'children={(item, index, { active }) => <Box ...>{...}</Box>}'\"),\n    itemProps: PropTypes.shape({}).description(\"Item specific background, border, and pad, keyed by data index.\\n      For example:\\n      { 27: { background: ..., border: ..., pad: ... }},\\n      where the background, border, and pad accept the same values as\\n      the same named properties on List.\"),\n    onMore: PropTypes.func.description(\"Use this to indicate that 'data' doesn't contain all that it could.\\n      It will be called when all of the data items have been rendered.\\n      This might be used when the total number of items that could be retrieved\\n      is more than you'd want to load into the browser. 'onMore' allows you\\n      to lazily fetch more from the server only when needed.\"),\n    onClickItem: PropTypes.func.description(\"When supplied, this function will be called with an event object that\\n      include a 'item' property containing the data value associated with\\n      the clicked item and an 'index' property containing the index in 'data'\\n      of the clicked item. You should not include interactive elements, like\\n      Anchor or Button inside 'primaryKey' or 'secondaryKey' as that can\\n      cause confusion with overlapping interactive elements.\"),\n    onOrder: PropTypes.func.description(\"Use this to indicate that the user should be allowed to re-order the\\n      data items. This cannot be used with 'paginate' or 'onClickItem'.\\n      The function will be called with the array of items in their new order\\n      when the user moves items via drag and drop or the move up/down\\n      controls.\"),\n    pad: PropTypes.oneOfType([padPropType]).description(\"Item padding.\"),\n    paginate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).description(\"Whether to paginate the data. If providing an object, any Box props or \\n    Pagination props are valid and will be used to style the underlying \\n    pagination component.\").defaultValue(undefined),\n    primaryKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).description(\"When a string is supplied, it indicates the property in a data item\\n      object to use to get the primary content. If a function is supplied, it\\n      will be called with the current data item object and should return\\n      a React element that will be rendered as the primary content.\"),\n    secondaryKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).description(\"When a string is supplied, it indicates the property in a data item\\n      object to use to get the secondary content. If a function is supplied, it\\n      will be called with the current data item object and should return\\n      a React element that will be rendered as the secondary content.\"),\n    show: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n      page: PropTypes.number\n    })]).description(\"If provided as a number, the index of an item to show. If using \\n        paginate and provided as an object in the format of show={{ page: 2 }}, \\n        the default page to show.\").defaultValue(undefined),\n    step: PropTypes.number.description('How many items to render at a time.').defaultValue(50)\n  });\n  return DocumentedList;\n};\nexport var themeDoc = {\n  'global.hover.background': {\n    description: 'The background style when hovering over an interactive item.',\n    type: 'string | { color: string, opacity: string }',\n    defaultValue: \"{ color: 'active', opacity: 'medium' }\"\n  },\n  'global.hover.color': {\n    description: 'The text color when hovering over an interactive item.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'white', light: 'black' }\"\n  },\n  'list.container': {\n    description: \"When using paginate, any valid Box props for the container \\n    surrounding the List and Pagination components.\",\n    type: 'object',\n    defaultValue: \"{ gap: 'small' }\"\n  },\n  'list.container.extend': {\n    description: \"Any additional style for the container \\n    surrounding the List and Pagination components.\",\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'list.extend': {\n    description: 'Any additional style for the list.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'list.icons.down': {\n    description: \"The icon to use for the move down button\\n    in re-ordable lists.\",\n    type: 'React.Element',\n    defaultValue: 'FormDown'\n  },\n  'list.icons.up': {\n    description: \"The icon to use for the move up button\\n    in re-ordable lists.\",\n    type: 'React.Element',\n    defaultValue: 'FormUp'\n  },\n  'list.item.background': {\n    description: 'Background color for list items.',\n    type: 'string | [string]',\n    defaultValue: undefined\n  },\n  'list.item.border': {\n    description: 'Border for list items.',\n    type: 'boolean | string | object',\n    defaultValue: 'horizontal'\n  },\n  'list.item.pad': {\n    description: 'Border for list items.',\n    type: 'boolean | string | object',\n    defaultValue: \"{ horizontal: 'medium', vertical: 'small' }\"\n  },\n  'list.item.extend': {\n    description: 'Any additional style for the list items.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  }\n};","map":{"version":3,"sources":["E:/react/my-app/node_modules/grommet/es6/components/List/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","genericProps","padPropType","getAvailableAtBadge","sizes","sides","padShapeSides","forEach","side","oneOf","borderTypes","bool","shape","color","oneOfType","string","dark","light","size","doc","List","DocumentedList","availableAt","description","usage","intrinsicElement","propTypes","action","func","as","defaultValue","background","arrayOf","border","data","children","itemProps","onMore","onClickItem","onOrder","pad","paginate","object","undefined","primaryKey","secondaryKey","show","number","page","step","themeDoc","type"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps, padPropType } from '../../utils/prop-types';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nvar sizes = ['none', 'xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\nvar sides = ['horizontal', 'vertical', 'top', 'bottom', 'left', 'right', 'start', 'end'];\nvar padShapeSides = {};\nsides.forEach(function (side) {\n  padShapeSides[side] = PropTypes.oneOf(sizes);\n});\nvar borderTypes = [PropTypes.bool, PropTypes.oneOf(sides), PropTypes.shape({\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    dark: PropTypes.string,\n    light: PropTypes.string\n  })]),\n  side: PropTypes.oneOf(sides),\n  size: PropTypes.oneOfType([PropTypes.oneOf(sizes), PropTypes.string])\n})];\nexport var doc = function doc(List) {\n  var DocumentedList = describe(List).availableAt(getAvailableAtBadge('List', 'Visualizations')).description('An ordered list of items.').usage(\"import { List } from 'grommet';\\n<List data={[...]} />\").intrinsicElement('ol');\n  DocumentedList.propTypes = _extends({}, genericProps, {\n    action: PropTypes.func.description(\"Accepts a function that allows for a custom rendering\\n       of a component, it should be passed with an item and\\n        index of an array and return a react element\\n      'action = ({item, index}) => <Content />'\"),\n    as: PropTypes.string.description('The DOM tag or react component to use for the element.').defaultValue('ul'),\n    background: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).description(\"Item background. An array value indicates that items should have\\n      different backgrounds, modulo the array index.\"),\n    border: PropTypes.oneOfType(borderTypes).description(\"Item border.\"),\n    data: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})])).description('Array of data objects.'),\n    children: PropTypes.func.description(\"Function that will be called when each data item is rendered.\\n      It will be passed three arguments, the individual data item, its index,\\n      and an object indicating the state of the item, if any. It\\n      should return a react element.\\n      For example:\\n      'children={(item, index, { active }) => <Box ...>{...}</Box>}'\"),\n    itemProps: PropTypes.shape({}).description(\"Item specific background, border, and pad, keyed by data index.\\n      For example:\\n      { 27: { background: ..., border: ..., pad: ... }},\\n      where the background, border, and pad accept the same values as\\n      the same named properties on List.\"),\n    onMore: PropTypes.func.description(\"Use this to indicate that 'data' doesn't contain all that it could.\\n      It will be called when all of the data items have been rendered.\\n      This might be used when the total number of items that could be retrieved\\n      is more than you'd want to load into the browser. 'onMore' allows you\\n      to lazily fetch more from the server only when needed.\"),\n    onClickItem: PropTypes.func.description(\"When supplied, this function will be called with an event object that\\n      include a 'item' property containing the data value associated with\\n      the clicked item and an 'index' property containing the index in 'data'\\n      of the clicked item. You should not include interactive elements, like\\n      Anchor or Button inside 'primaryKey' or 'secondaryKey' as that can\\n      cause confusion with overlapping interactive elements.\"),\n    onOrder: PropTypes.func.description(\"Use this to indicate that the user should be allowed to re-order the\\n      data items. This cannot be used with 'paginate' or 'onClickItem'.\\n      The function will be called with the array of items in their new order\\n      when the user moves items via drag and drop or the move up/down\\n      controls.\"),\n    pad: PropTypes.oneOfType([padPropType]).description(\"Item padding.\"),\n    paginate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).description(\"Whether to paginate the data. If providing an object, any Box props or \\n    Pagination props are valid and will be used to style the underlying \\n    pagination component.\").defaultValue(undefined),\n    primaryKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).description(\"When a string is supplied, it indicates the property in a data item\\n      object to use to get the primary content. If a function is supplied, it\\n      will be called with the current data item object and should return\\n      a React element that will be rendered as the primary content.\"),\n    secondaryKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).description(\"When a string is supplied, it indicates the property in a data item\\n      object to use to get the secondary content. If a function is supplied, it\\n      will be called with the current data item object and should return\\n      a React element that will be rendered as the secondary content.\"),\n    show: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n      page: PropTypes.number\n    })]).description(\"If provided as a number, the index of an item to show. If using \\n        paginate and provided as an object in the format of show={{ page: 2 }}, \\n        the default page to show.\").defaultValue(undefined),\n    step: PropTypes.number.description('How many items to render at a time.').defaultValue(50)\n  });\n  return DocumentedList;\n};\nexport var themeDoc = {\n  'global.hover.background': {\n    description: 'The background style when hovering over an interactive item.',\n    type: 'string | { color: string, opacity: string }',\n    defaultValue: \"{ color: 'active', opacity: 'medium' }\"\n  },\n  'global.hover.color': {\n    description: 'The text color when hovering over an interactive item.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'white', light: 'black' }\"\n  },\n  'list.container': {\n    description: \"When using paginate, any valid Box props for the container \\n    surrounding the List and Pagination components.\",\n    type: 'object',\n    defaultValue: \"{ gap: 'small' }\"\n  },\n  'list.container.extend': {\n    description: \"Any additional style for the container \\n    surrounding the List and Pagination components.\",\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'list.extend': {\n    description: 'Any additional style for the list.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'list.icons.down': {\n    description: \"The icon to use for the move down button\\n    in re-ordable lists.\",\n    type: 'React.Element',\n    defaultValue: 'FormDown'\n  },\n  'list.icons.up': {\n    description: \"The icon to use for the move up button\\n    in re-ordable lists.\",\n    type: 'React.Element',\n    defaultValue: 'FormUp'\n  },\n  'list.item.background': {\n    description: 'Background color for list items.',\n    type: 'string | [string]',\n    defaultValue: undefined\n  },\n  'list.item.border': {\n    description: 'Border for list items.',\n    type: 'boolean | string | object',\n    defaultValue: 'horizontal'\n  },\n  'list.item.pad': {\n    description: 'Border for list items.',\n    type: 'boolean | string | object',\n    defaultValue: \"{ horizontal: 'medium', vertical: 'small' }\"\n  },\n  'list.item.extend': {\n    description: 'Any additional style for the list items.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  }\n};"]},"metadata":{},"sourceType":"module"}