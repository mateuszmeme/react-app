{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\my-app\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { Box, Grid, Text } from 'grommet';\nimport { hpe } from 'grommet-theme-hpe';\nimport { FormClose, Notification } from 'grommet-icons'; // const AppBar = (props) => (\n//   <Box\n//     tag='header'\n//     direction='row'\n//     align='center'\n//     justify='between'\n//     background='brand'\n//     pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n//     elevation='medium'\n//     style={{ zIndex: '1' }}\n//     {...props}\n//   />\n// );\n// function App() {\n//   const [showSidebar, setShowSidebar] = useState(false);\n//   return (\n//     <Grommet theme={hpe} full>\n//       <ResponsiveContext.Consumer>\n//         {size => (\n//           <Box fill>\n//             <AppBar>\n//               Hello Grommet!\n//               <Heading level='3' margin='none'>My App</Heading>\n//               <Button\n//                 icon={<Notification />}\n//                 onClick={() => setShowSidebar(!showSidebar)}\n//               />\n//             </AppBar>\n//             <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n//               <Box flex align='center' justify='center'>\n//                 app body\n//               </Box>\n//               {(!showSidebar || size !== 'small') ? (\n//                 <Collapsible direction=\"horizontal\" open={showSidebar}>\n//                   <Box\n//                     flex\n//                     width='medium'\n//                     background='light-2'\n//                     elevation='small'\n//                     align='center'\n//                     justify='center'\n//                   >\n//                     sidebar\n//                   </Box>\n//                 </Collapsible>\n//               ) : (\n//                 <Layer>\n//                   <Box\n//                     background='light-2'\n//                     tag='header'\n//                     justify='end'\n//                     align='center'\n//                     direction='row'\n//                   >\n//                     <Button\n//                       icon={<FormClose />}\n//                       onClick={() => setShowSidebar(false)}\n//                     />\n//                   </Box>\n//                   <Box\n//                     fill\n//                     background='light-2'\n//                     align='center'\n//                     justify='center'\n//                   >\n//                     sidebar\n//                   </Box>\n//                 </Layer>\n//               )}\n//             </Box>\n//           </Box>\n//         )}\n//       </ResponsiveContext.Consumer>\n//     </Grommet>\n//   );\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GridExample = () => /*#__PURE__*/_jsxDEV(Grommet, {\n  theme: hpe,\n  full: true,\n  children: /*#__PURE__*/_jsxDEV(Grid, {\n    rows: ['xxsmall', 'flex', 'xxsmall'],\n    columns: ['xsmall', 'auto'],\n    areas: [['header', 'header'], ['sidebar', 'main'], ['footer', 'footer']],\n    fill: true,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      border: {\n        color: 'border',\n        style: 'dashed'\n      },\n      gridArea: \"header\",\n      justify: \"center\",\n      pad: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        weight: \"bold\",\n        children: \"Header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      border: {\n        color: 'border',\n        style: 'dashed'\n      },\n      gridArea: \"sidebar\",\n      pad: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        weight: \"bold\",\n        children: \"Sidebar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      border: {\n        color: 'border',\n        style: 'dashed'\n      },\n      gridArea: \"main\",\n      pad: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        weight: \"bold\",\n        children: \"Main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      border: {\n        color: 'border',\n        style: 'dashed'\n      },\n      gridArea: \"footer\",\n      justify: \"center\",\n      pad: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        weight: \"bold\",\n        children: \"Footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 3\n}, this);\n_c = GridExample;\nexport default GridExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridExample\");","map":{"version":3,"sources":["E:/react/my-app/src/App.js"],"names":["React","useState","Box","Grid","Text","hpe","FormClose","Notification","GridExample","color","style"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Grid, Text } from 'grommet';\nimport { hpe } from 'grommet-theme-hpe';\nimport { FormClose, Notification } from 'grommet-icons';\n// const AppBar = (props) => (\n//   <Box\n//     tag='header'\n//     direction='row'\n//     align='center'\n//     justify='between'\n//     background='brand'\n//     pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n//     elevation='medium'\n//     style={{ zIndex: '1' }}\n//     {...props}\n//   />\n// );\n// function App() {\n//   const [showSidebar, setShowSidebar] = useState(false);\n//   return (\n//     <Grommet theme={hpe} full>\n//       <ResponsiveContext.Consumer>\n//         {size => (\n//           <Box fill>\n//             <AppBar>\n//               Hello Grommet!\n//               <Heading level='3' margin='none'>My App</Heading>\n//               <Button\n//                 icon={<Notification />}\n//                 onClick={() => setShowSidebar(!showSidebar)}\n//               />\n//             </AppBar>\n//             <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n//               <Box flex align='center' justify='center'>\n//                 app body\n//               </Box>\n//               {(!showSidebar || size !== 'small') ? (\n//                 <Collapsible direction=\"horizontal\" open={showSidebar}>\n//                   <Box\n//                     flex\n//                     width='medium'\n//                     background='light-2'\n//                     elevation='small'\n//                     align='center'\n//                     justify='center'\n//                   >\n//                     sidebar\n//                   </Box>\n//                 </Collapsible>\n//               ) : (\n//                 <Layer>\n//                   <Box\n//                     background='light-2'\n//                     tag='header'\n//                     justify='end'\n//                     align='center'\n//                     direction='row'\n//                   >\n//                     <Button\n//                       icon={<FormClose />}\n//                       onClick={() => setShowSidebar(false)}\n//                     />\n//                   </Box>\n//                   <Box\n//                     fill\n//                     background='light-2'\n//                     align='center'\n//                     justify='center'\n//                   >\n//                     sidebar\n//                   </Box>\n//                 </Layer>\n//               )}\n//             </Box>\n//           </Box>\n//         )}\n//       </ResponsiveContext.Consumer>\n//     </Grommet>\n//   );\n// }\n\n// export default App;\nexport const GridExample = () => (\n  <Grommet theme={hpe} full>\n  <Grid\n    rows={['xxsmall', 'flex', 'xxsmall']}\n    columns={['xsmall', 'auto']}\n    areas={[\n      ['header', 'header'],\n      ['sidebar', 'main'],\n      ['footer', 'footer'],\n    ]}\n    fill\n  >\n    <Box\n      border={{ color: 'border', style: 'dashed' }}\n      gridArea=\"header\"\n      justify=\"center\"\n      pad=\"small\"\n    >\n      <Text weight=\"bold\">Header</Text>\n    </Box>\n\n    <Box\n      border={{ color: 'border', style: 'dashed' }}\n      gridArea=\"sidebar\"\n      pad=\"small\"\n    >\n      <Text weight=\"bold\">Sidebar</Text>\n    </Box>\n\n    <Box\n      border={{ color: 'border', style: 'dashed' }}\n      gridArea=\"main\"\n      pad=\"small\"\n    >\n      <Text weight=\"bold\">Main</Text>\n    </Box>\n\n    <Box\n      border={{ color: 'border', style: 'dashed' }}\n      gridArea=\"footer\"\n      justify=\"center\"\n      pad=\"small\"\n    >\n      <Text weight=\"bold\">Footer</Text>\n    </Box>\n  </Grid>\n  </Grommet>\n);\nexport default GridExample;"]},"metadata":{},"sourceType":"module"}