{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Button, Collapsible, Heading, Grommet, Layer, ResponsiveContext } from 'grommet';\nimport { hpe } from 'grommet-theme-hpe';\nimport { FormClose, Notification } from 'grommet-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppBar = props => /*#__PURE__*/_jsxDEV(Box, {\n  tag: \"header\",\n  direction: \"row\",\n  align: \"center\",\n  justify: \"between\",\n  background: \"brand\",\n  pad: {\n    left: 'medium',\n    right: 'small',\n    vertical: 'small'\n  },\n  elevation: \"medium\",\n  style: {\n    zIndex: '1'\n  },\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\n_c = AppBar;\n\nfunction App() {\n  _s();\n\n  const [showSidebar, setShowSidebar] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Grommet, {\n    theme: hpe,\n    full: true,\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContext.Consumer, {\n      children: size => /*#__PURE__*/_jsxDEV(Grid, {\n        rows: ['xxsmall', 'flex', 'xxsmall'],\n        columns: ['xsmall', 'auto'],\n        areas: [['header', 'header'], ['sidebar', 'main'], ['footer', 'footer']],\n        fill: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          fill: true,\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            children: [\"Hello Grommet!\", /*#__PURE__*/_jsxDEV(Heading, {\n              level: \"3\",\n              margin: \"none\",\n              children: \"My App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this),\n              onClick: () => setShowSidebar(!showSidebar)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            flex: true,\n            overflow: {\n              horizontal: 'hidden'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              flex: true,\n              align: \"center\",\n              justify: \"center\",\n              children: \"app body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), !showSidebar || size !== 'small' ? /*#__PURE__*/_jsxDEV(Collapsible, {\n              direction: \"horizontal\",\n              open: showSidebar,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                flex: true,\n                width: \"medium\",\n                background: \"light-2\",\n                elevation: \"small\",\n                align: \"center\",\n                justify: \"center\",\n                children: \"sidebar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Layer, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                background: \"light-2\",\n                tag: \"header\",\n                justify: \"end\",\n                align: \"center\",\n                direction: \"row\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(FormClose, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 29\n                  }, this),\n                  onClick: () => setShowSidebar(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                fill: true,\n                background: \"light-2\",\n                align: \"center\",\n                justify: \"center\",\n                children: \"sidebar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Jn+Blp4AInVy8bzFY0VrkhtmHTg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppBar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["E:/react/my-app/src/App.js"],"names":["React","useState","Box","Button","Collapsible","Heading","Grommet","Layer","ResponsiveContext","hpe","FormClose","Notification","AppBar","props","left","right","vertical","zIndex","App","showSidebar","setShowSidebar","size","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Collapsible,\n  Heading,\n  Grommet,\n  Layer,\n  ResponsiveContext,\n} from 'grommet';\nimport { hpe } from 'grommet-theme-hpe';\nimport { FormClose, Notification } from 'grommet-icons';\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation='medium'\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(false);\n  return (\n    <Grommet theme={hpe} full>\n      <ResponsiveContext.Consumer>\n        {size => (\n          <Grid\n          rows={['xxsmall', 'flex', 'xxsmall']}\n          columns={['xsmall', 'auto']}\n          areas={[\n            ['header', 'header'],\n            ['sidebar', 'main'],\n            ['footer', 'footer'],\n          ]}\n          fill\n        >\n          <Box fill>\n            <AppBar>\n              Hello Grommet!\n              <Heading level='3' margin='none'>My App</Heading>\n              <Button\n                icon={<Notification />}\n                onClick={() => setShowSidebar(!showSidebar)}\n              />\n            </AppBar>\n            <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n              <Box flex align='center' justify='center'>\n                app body\n              </Box>\n              {(!showSidebar || size !== 'small') ? (\n                <Collapsible direction=\"horizontal\" open={showSidebar}>\n                  <Box\n                    flex\n                    width='medium'\n                    background='light-2'\n                    elevation='small'\n                    align='center'\n                    justify='center'\n                  >\n                    sidebar\n                  </Box>\n                </Collapsible>\n              ) : (\n                <Layer>\n                  <Box\n                    background='light-2'\n                    tag='header'\n                    justify='end'\n                    align='center'\n                    direction='row'\n                  >\n                    <Button\n                      icon={<FormClose />}\n                      onClick={() => setShowSidebar(false)}\n                    />\n                  </Box>\n                  <Box\n                    fill\n                    background='light-2'\n                    align='center'\n                    justify='center'\n                  >\n                    sidebar\n                  </Box>\n                </Layer>\n              )}\n            </Box>\n          </Box>\n          </Grid>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}