{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\my-app\\\\src\\\\header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Box, Button, Header, Keyboard, ResponsiveContext, Text, TextInput } from 'grommet';\nimport { Search as SearchIcon, Hpe } from 'grommet-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTextInput = styled(TextInput).attrs(() => ({\n  'aria-labelledby': 'search-icon-example'\n}))``;\n_c = StyledTextInput;\nexport const HeaderExample = () => {\n  _s();\n\n  const size = useContext(ResponsiveContext);\n  const [focused, setFocused] = useState(false);\n  const inputRef = useRef();\n  useEffect(() => {\n    if (focused && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [focused, setFocused]);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    fill: \"horizontal\",\n    pad: {\n      horizontal: 'medium',\n      vertical: 'small'\n    },\n    background: \"background-front\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        direction: \"row\",\n        align: \"start\",\n        gap: \"medium\" // pad maintains accessible hit target\n        // non-responsive maintains same dimensions for mobile\n        ,\n        pad: {\n          vertical: 'small'\n        },\n        responsive: false,\n        children: [/*#__PURE__*/_jsxDEV(Hpe, {\n          color: \"brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), (size !== 'small' || size === 'small' && !focused) && /*#__PURE__*/_jsxDEV(Box, {\n          direction: \"row\",\n          gap: \"xsmall\",\n          wrap: true,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"text-strong\",\n            weight: \"bold\",\n            children: \"HPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"text-strong\",\n            children: \"App Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!focused && size === 'small' && /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this),\n        hoverIndicator: true,\n        onClick: () => setFocused(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), (focused || size !== 'small') && /*#__PURE__*/_jsxDEV(Box, {\n        background: \"background-contrast\",\n        round: \"xsmall\",\n        width: \"medium\",\n        children: /*#__PURE__*/_jsxDEV(Keyboard, {\n          onEsc: () => setFocused(false),\n          children: /*#__PURE__*/_jsxDEV(StyledTextInput, {\n            ref: inputRef,\n            icon: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              id: \"search-icon-example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this),\n            dropHeight: \"small\",\n            placeholder: \"Search HPE Design System\",\n            onBlur: () => setFocused(false),\n            plain: true,\n            reverse: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderExample, \"/JLz0COzmrTcW4lA29/EU5iO1YQ=\");\n\n_c2 = HeaderExample;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledTextInput\");\n$RefreshReg$(_c2, \"HeaderExample\");","map":{"version":3,"sources":["E:/react/my-app/src/header.js"],"names":["React","useContext","useEffect","useRef","useState","styled","Box","Button","Header","Keyboard","ResponsiveContext","Text","TextInput","Search","SearchIcon","Hpe","StyledTextInput","attrs","HeaderExample","size","focused","setFocused","inputRef","current","focus","horizontal","vertical"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,iBALF,EAMEC,IANF,EAOEC,SAPF,QAQO,SARP;AASA,SAASC,MAAM,IAAIC,UAAnB,EAA+BC,GAA/B,QAA0C,eAA1C;;;AAEA,MAAMC,eAAe,GAAGX,MAAM,CAACO,SAAD,CAAN,CAAkBK,KAAlB,CAAwB,OAAO;AACrD,qBAAmB;AADkC,CAAP,CAAxB,CAEpB,EAFJ;KAAMD,e;AAIN,OAAO,MAAME,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAMC,IAAI,GAAGlB,UAAU,CAACS,iBAAD,CAAvB;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMkB,QAAQ,GAAGnB,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,OAAO,IAAIE,QAAQ,CAACC,OAAxB,EAAiC;AAC/BD,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD;AACF,GAJQ,EAIN,CAACJ,OAAD,EAAUC,UAAV,CAJM,CAAT;AAMA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,GAAG,EAAE;AAAEI,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,QAAQ,EAAE;AAAlC,KAFP;AAGE,IAAA,UAAU,EAAC,kBAHb;AAAA,4BAKE,QAAC,MAAD;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,GAAG,EAAC,QAHN,CAIE;AACA;AALF;AAME,QAAA,GAAG,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SANP;AAOE,QAAA,UAAU,EAAE,KAPd;AAAA,gCASE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBATF,EAUG,CAACP,IAAI,KAAK,OAAT,IAAqBA,IAAI,KAAK,OAAT,IAAoB,CAACC,OAA3C,kBACC,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,GAAG,EAAC,QAAzB;AAAkC,UAAA,IAAI,MAAtC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAC,aAAZ;AAA0B,YAAA,MAAM,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eA0BE;AAAA,iBACG,CAACA,OAAD,IAAYD,IAAI,KAAK,OAArB,iBACC,QAAC,MAAD;AACE,QAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADR;AAEE,QAAA,cAAc,MAFhB;AAGE,QAAA,OAAO,EAAE,MAAME,UAAU,CAAC,IAAD;AAH3B;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQG,CAACD,OAAO,IAAID,IAAI,KAAK,OAArB,kBACC,QAAC,GAAD;AAAK,QAAA,UAAU,EAAC,qBAAhB;AAAsC,QAAA,KAAK,EAAC,QAA5C;AAAqD,QAAA,KAAK,EAAC,QAA3D;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,MAAME,UAAU,CAAC,KAAD,CAAjC;AAAA,iCACE,QAAC,eAAD;AACE,YAAA,GAAG,EAAEC,QADP;AAEE,YAAA,IAAI,eAAE,QAAC,UAAD;AAAY,cAAA,EAAE,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFR;AAGE,YAAA,UAAU,EAAC,OAHb;AAIE,YAAA,WAAW,EAAC,0BAJd;AAKE,YAAA,MAAM,EAAE,MAAMD,UAAU,CAAC,KAAD,CAL1B;AAME,YAAA,KAAK,MANP;AAOE,YAAA,OAAO;AAPT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CAhEM;;GAAMH,a;;MAAAA,a","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Header,\r\n  Keyboard,\r\n  ResponsiveContext,\r\n  Text,\r\n  TextInput,\r\n} from 'grommet';\r\nimport { Search as SearchIcon, Hpe } from 'grommet-icons';\r\n\r\nconst StyledTextInput = styled(TextInput).attrs(() => ({\r\n  'aria-labelledby': 'search-icon-example',\r\n}))``;\r\n\r\nexport const HeaderExample = () => {\r\n  const size = useContext(ResponsiveContext);\r\n  const [focused, setFocused] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (focused && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [focused, setFocused]);\r\n\r\n  return (\r\n    <Header\r\n      fill=\"horizontal\"\r\n      pad={{ horizontal: 'medium', vertical: 'small' }}\r\n      background=\"background-front\"\r\n    >\r\n      <Button>\r\n        <Box\r\n          direction=\"row\"\r\n          align=\"start\"\r\n          gap=\"medium\"\r\n          // pad maintains accessible hit target\r\n          // non-responsive maintains same dimensions for mobile\r\n          pad={{ vertical: 'small' }}\r\n          responsive={false}\r\n        >\r\n          <Hpe color=\"brand\" />\r\n          {(size !== 'small' || (size === 'small' && !focused)) && (\r\n            <Box direction=\"row\" gap=\"xsmall\" wrap>\r\n              <Text color=\"text-strong\" weight=\"bold\">\r\n                HPE\r\n              </Text>\r\n              <Text color=\"text-strong\">App Name</Text>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Button>\r\n      <>\r\n        {!focused && size === 'small' && (\r\n          <Button\r\n            icon={<SearchIcon />}\r\n            hoverIndicator\r\n            onClick={() => setFocused(true)}\r\n          />\r\n        )}\r\n        {(focused || size !== 'small') && (\r\n          <Box background=\"background-contrast\" round=\"xsmall\" width=\"medium\">\r\n            <Keyboard onEsc={() => setFocused(false)}>\r\n              <StyledTextInput\r\n                ref={inputRef}\r\n                icon={<SearchIcon id=\"search-icon-example\" />}\r\n                dropHeight=\"small\"\r\n                placeholder=\"Search HPE Design System\"\r\n                onBlur={() => setFocused(false)}\r\n                plain\r\n                reverse\r\n              />\r\n            </Keyboard>\r\n          </Box>\r\n        )}\r\n      </>\r\n    </Header>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}